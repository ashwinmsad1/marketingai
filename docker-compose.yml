version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ai_marketing_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_marketing_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - ai_marketing_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_marketing_platform"]
      interval: 30s
      timeout: 10s
      retries: 3


  # FastAPI Application
  api:
    build: .
    container_name: ai_marketing_api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_marketing_platform
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ai_marketing_platform
      - DB_USER=postgres
      - DB_PASSWORD=password
      - API_KEY=${API_KEY}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai_marketing_network
    command: uvicorn api_server:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (React)
  frontend:
    build: ./frontend
    container_name: ai_marketing_frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - api
    networks:
      - ai_marketing_network

volumes:
  postgres_data:
    driver: local

networks:
  ai_marketing_network:
    driver: bridge